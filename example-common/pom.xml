<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.neyogoo.example</groupId>
        <artifactId>example-dependencies</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>example-dependencies/pom.xml</relativePath>
    </parent>

    <artifactId>example-common</artifactId>
    <packaging>pom</packaging>
    <modelVersion>4.0.0</modelVersion>

    <modules>
        <module>example-authority</module>
        <module>example-boot</module>
        <module>example-cloud</module>
        <module>example-core</module>
        <module>example-database</module>
        <module>example-dependencies</module>
        <module>example-log</module>
        <module>example-mongodb</module>
        <module>example-mq</module>
        <module>example-redis</module>
        <module>example-shardingsphere-seata</module>
        <module>example-swagger</module>
        <module>example-token</module>
        <module>example-uid</module>
        <module>example-xss</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-authority</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-boot</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-cloud</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-database</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-log</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-mongodb</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-mq</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-redis</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-shardingsphere-seata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-swagger</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-token</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-uid</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.neyogoo.example</groupId>
                <artifactId>example-xss</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <profile.active>dev</profile.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <profile.active>test</profile.active>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profile.active>prod</profile.active>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <!-- <compilerArgs>-Xlint:deprecation</compilerArgs> -->
                        <!-- <compilerArgs>-Xlint:unchecked</compilerArgs> -->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <!-- 后缀为pem、pfx的证书文件 -->
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                            <nonFilteredFileExtension>map</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                            <nonFilteredFileExtension>key</nonFilteredFileExtension>
                            <nonFilteredFileExtension>db</nonFilteredFileExtension>
                            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                            <nonFilteredFileExtension>otf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttc</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                            <nonFilteredFileExtension>html</nonFilteredFileExtension>
                            <nonFilteredFileExtension>png</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>store</nonFilteredFileExtension>
                            <nonFilteredFileExtension>lic</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <!-- <aggregate>true</aggregate> -->
                        <charset>UTF-8</charset>
                        <docencoding>UTF-8</docencoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <configuration>
                                <additionalJOption>-Xdoclint:none</additionalJOption>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!--配置生成源码包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 一键更新子模块版本号 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>
                <!-- checkstyle -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>src/main/config/checkstyle.xml</configLocation>
                    </configuration>
                    <executions>
                        <execution>
                            <id>checkstyle</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <failOnViolation>true</failOnViolation>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!--
                    jar 包加密
                    1. 加密后，方法体被清空，保留方法参数、注解等信息.主要兼容 swagger 文档注解扫描
                    2. 方法体被清空后，反编译只能看到方法名和注解，看不到方法体的具体内容
                    3. 加密后的项目需要设置 javaagent 来启动，启动过程中解密 class，完全内存解密，不留下任何解密后的文件
                    4. 启动加密后的 jar，生成xxx-encrypted.jar，这个就是加密后的 jar 文件，加密后不可直接执行
                    5. 无密码启动方式：java -javaagent:xxx-encrypted.jar -jar xxx-encrypted.jar
                    6. 有密码启动方式：java -javaagent:xxx-encrypted.jar='-pwd= 密码' -jar xxx-encrypted.jar
                -->
                <plugin>
                    <groupId>net.roseboy</groupId>
                    <artifactId>classfinal-maven-plugin</artifactId>
                    <version>${maven-classfinal-plugin}</version>
                    <configuration>
                        <!-- #表示启动时不需要密码，对于代码混淆来说，这个密码没什么用，它只是一个启动密码 -->
                        <password>#</password>
                        <excludes>org.spring</excludes>
                        <!-- 加密的包名，多个包用逗号分开 -->
                        <packages>${project.groupId}</packages>
                        <!-- 加密的配置文件，多个包用逗号分开 -->
                        <!-- <cfgfiles>bootstrap.yml</cfgfiles> -->
                        <!-- jar 包 lib 下面要加密的 jar 依赖文件，多个包用逗号分开 -->
                        <!-- <libjars>example.jar</libjars> -->
                        <!-- 指定机器启动，机器码 -->
                        <!-- <code>machine-code</code> -->
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>classFinal</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!-- 资源插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            -->
            <!-- 一键更新子模块版本号 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>